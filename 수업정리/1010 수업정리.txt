애플리케이션을 구성하는 클래스들 간의 관계를 그리기 위하여 클래스 다이어그램을 사용한다.
가장 대표적인 클래스 다이어그램 표기법은 UML이다.

4~5장에서 시험 많이나옴

생성자 함수(멤버 함수) -> 클래스
객체를 생성할 때 객체를 초기화 하는 함수가 자동으로 호출되는 것
생성자 함수의 이름은 클래스의 이름과 같다.

객체를 생성하면 자동적으로 컴파일러가 생성자 함수를 호출하여 실행한다.
생성자 함수를 호출할때 대응되는 값이 없다면 에러가 발생함.
생성자 중복 정의를 활용하여 해결 가능.

생성자 중복 정의
생성자 함수도 멤버 함수이기 때문에 오버로딩(중복정의)이 가능하다.

인수가 없는 생성자를 기본 생성자 라고 한다. 기본 생성자는 객체를 생성시 인수를 주지 않으면 자동으로 호출된다.

디폴트 생성자
생성자도 멤버함수이기 때문에 디폴트 값을 가질 수 있다.

멤버 초기화 리스트
초기화 리스트를 사용하면 멤버들을 더 쉽게 초기화 할 수 있다.

time(int h, int m){ // 생성자
    hour = h;
    minute = m;
}

time(int h, int m) : hour(h), minute(m){ // 위의 코드를 이와같이 더 쉽게 작성할 수 있다.
}

생성자 특징
1.생성자는 클래스에 소속된 멤버함수이다.
2.생성자 이름은 클래스 이름으로 한다.
3.생성자는 자료형을 지정하지 않는다. 반환값이 없다.
4.생성자는 객체를 생성(선언)할 때 컴파일러에 의해 자동으로 호출되며 명시적으로 호출하지 않는다.
5.생성자는 public으로 선언되어야 한다.
6.생성자도 함수이므로 함수 오버로딩이 가능하다.
생성자를 생략 가능 : c++ 컴파일러는 매개변수가 없는 생성자를 자동으로 만드는데, 함수의 몸체가 비어있는 경우 아무 일도 하지 않는 빈껍데기 생성자이다. -> 디폴트 생성자

생성자 함수에서 할당된 메모리는 소멸자 함수를 호출하여 반납하여야 한다.
소멸자 함수는 앞에 ~기호를 붙인다. 소멸자의 이름도 생성자처럼 클래스와 같다.
