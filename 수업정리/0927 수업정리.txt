객체는 프로그램에서 클래스로 표현한다.

객체 지향 프로그래밍
객체 지향 프로그래밍에서는 데이터와 함수가 묶여있다.

객체의 상태
객체의 속성ex) 자동차 객체의 경우 속성은 차종, 색상, 기어, 속도, 연식 배기량, 주행 거리, 연비 등

객체의 동작
객체가 취할수 있는 동작 ex)출발하기, 멈추기, 가속하기, 감속하기, 방향 전환하기 등

객체의 상태와 동작은 프로그램에서 변수와 함수로 표현할 수 있다.
즉 객체는 변수와 함수로 이루어져 있는 코드의 묶음이라 할 수 있다.

멤버 변수
객체 안의 변수에 객체의 상태를 저장.
일반적인 변수와 구별하기 위하여 멤버변수 또는 필드라고 부른다.

멤버 함수
객체 안의 함수는 특정한 동작(작업)을 수행
일반적인 함수와 구별하기 위하여 멤버함수 또는 메소드라고 부른다.

클래스
객체가 어떻게 생겼는지 모양을 잡아주는것(설계도면)
클래스로부터 만들어지는 객체를 그 클래스의 인스턴스라고 부른다.

멤버 함수 중복정의
멤버 함수도 함수의 일종이므로 중복정의가 가능하다.

Class PrintData {
public:
    void print(int i) {cout << i << endl; }
    void print(double f) {cout << f << endl; }
    void print(string s = "No Data!") {cout << s << endl; }
}

int main() {
    PrintData obj;

    obj.print(1);
    obj.print(3.14);
    obj.print("c++14 is cool.");
    obj.print(); // 디폴트값이 있는 print(string)의 No Data!를 출력함.
}