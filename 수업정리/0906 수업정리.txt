#include <iosteram>

using namespace std;

int main(){
    cout << "hello world"<< endl;    
    return 0;
}

cout:c++에서 printf와 같은 출력함수
cin:c++에서 scanf와 같은 입력함수

using namespace std를 사용하지 않을경우    std::cout << "hello world"<< std::endl; 와 같이 어떤 공간에서 사용하는지를 명시해야 한다.

자료형 bool은 참, 거짓을 나타내는 자료형이다.
#include <iosteram>

using namespace std;

int main(){
    bool b;
    b = true;
    return 0;
}

정수를 나타내는 방법
1. 절댓값을 이용하는 방법(+,-를 붙인다)
2. 1의 보수를 이용하는 방법
3. 2의 보수를 이용하는 방법

c++에서는 문자열을 위한 string 타입을 제공한다(32byte). 
string : 문자열 객체

#include <iosteram>
#include <string> // string 타입을 이용하기 위한 헤더파일
using namespace std;

int main(){
    string s1 = "Good";
    string s2 = "Morning";
    string s3 = s1 + " " + s2 + "!";
    cout << s3 << endl;
    return 0;
}

다형성
어떤 객체의 속성이나 기능이 상황에 따라 여러 가지 형태를 가질 수 있는 성질
+의 경우 1 + 1과 같은 연산도 가능하지만 string + string 처럼 문자열끼리 합칠때에도 사용할 수 있다.

c에서는 #define을 사용하여 상수선언을 하였지만 c++에서는 변수 앞에 const를 붙여 상수를 선언한다.
const double TEX_RATE = 0.25; // 기호 상수 선언
int income = 1000;
income = income - TEX_RATE * income;

auto
데이터 타입이 무엇인지 모를때 auto를 사용한다.

산술 연산자
+ - * / %   